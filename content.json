{"meta":{"title":"Helldiver's blog","subtitle":"","description":"浮躁的是人，而不是环境","author":"Helldiver","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"浏览器私有前缀","slug":"浏览器私有前缀","date":"2021-09-25T05:31:02.000Z","updated":"2021-09-26T07:08:06.592Z","comments":true,"path":"2021/09/25/浏览器私有前缀/","link":"","permalink":"http://example.com/2021/09/25/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%A7%81%E6%9C%89%E5%89%8D%E7%BC%80/","excerpt":"","text":"私有前缀的出现：#CSS3 规范从启动到成为W3C 的推荐标准，一般要经历数年。而在W3C 开发标准的过程中，浏览器通常会提前实现这些特性。 对于这种情况，浏览器厂商通常都会在CSS3新出现但却未纳入W3C开发标准的属性前添加厂商的私有前缀，来测试这些尚未成为标准的特性。 有些时候，有些浏览器为了扩展某方面的功能，它们也会选择新增的一些CSS属性，这些自行扩展的CSS属性也是浏览器专属的。为了让这些浏览器识别这些专属属性，CSS规范允许在CSS属性前增加各自的浏览器前缀。 因此，利用私有前缀的特性，我们可以用来解决浏览器对CSS3的兼容性问题。 常见的私有前缀： 前缀 适用内核 浏览器举例 -webkit- webkit Chrome 、Safari -moz- Gecko Firefox -ms- Trident IE -o- Presto Opera 如，对border-radius属性，用它来指定元素的圆角，很多厂商就使用了私有前缀。而一旦标准充分成熟，浏览器厂商就会移除前缀，直接支持border-radius。代码如下： 123456.round10 &#123; -ms-border-radius: 10px; /* Miscrosoft (Internet Explorer) */ -moz-border-radius: 10px; /* Mozilla(如Firefox) */ -webkit-border-radius: 10px; /* Webkit(如Chrome 、Opera、Safari) */ border-radius: 10px; /* W3C */&#125; 使用私有前缀时，如果私有特性和最后的标准特性不一致，就会出现兼容问题。因此，需要把浏览器的私有属性写在前面，把标准属性写在最后面，来确保在特性被完全支持时，能得到正确的效果。 列出每一种私有前缀是最理想的做法，但实际开发中，很少有人这样做。最好的作法是，在编写规则之前，检查哪些浏览器支持该特性，仅列出不支持该特性的私有前缀。如： 1234.round10 &#123; -ms-border-radius: 10px; /* Miscrosoft (Internet Explorer) */ border-radius: 10px; /* W3C */&#125; 这样写会覆盖使用Webkit和Gecko内核，以及已经完全实现了该规则的任何浏览器，代码不会那么臃肿了，阅读起来也更方便了。更重要的是，可以大大减轻后期维护的负担。 文章参考链接：https://blog.csdn.net/ixygj197875/article/details/79371508https://blog.csdn.net/wyx100/article/details/50450728https://blog.csdn.net/tinglis/article/details/107889051","categories":[],"tags":[{"name":"私有前缀 浏览器内核 -moz -webkit -ms CSS3","slug":"私有前缀-浏览器内核-moz-webkit-ms-CSS3","permalink":"http://example.com/tags/%E7%A7%81%E6%9C%89%E5%89%8D%E7%BC%80-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8-moz-webkit-ms-CSS3/"}]},{"title":"Markdown入门","slug":"Markdown入门","date":"2021-09-17T02:36:02.000Z","updated":"2021-09-26T07:08:05.492Z","comments":true,"path":"2021/09/17/Markdown入门/","link":"","permalink":"http://example.com/2021/09/17/Markdown%E5%85%A5%E9%97%A8/","excerpt":"","text":"Markdown 简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。 Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown 编写的文档后缀为 .md, .Markdown。 Markdown 应用Markdown 能被使用来撰写电子书，如：Gitbook。当前许多网站都广泛使用 Markdown来撰写帮助文档或是用于论坛上发表消息。 例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。 Markdown 标题Markdown 标题有两种格式。 使=和-标记一级和二级标题 =和-标记语法格式如下： 1234我展示的是一级标题===我展示的是二级标题--- 使用#号标记 使用#号可表示 1-6 级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 Markdown 段落Markdown 段落没有特殊的格式，直接编写文字就好。 段落的换行是使用两个以上空格加上回车。当然也可以在段落后面使用一个空行来表示重新开始一个段落。 Markdown 文本 Markdown 可以使用以下几种字体： 123456*斜体文本* _斜体文本_ **粗体文本** __粗体文本__ ***粗斜体文本*** ___粗斜体文本___ 演示： 斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本 Markdown 可以使用以下两种文本线 12~~带删除线的文本~~&lt;u&gt;带下划线文本&lt;/u&gt; 演示： 带删除线的文本 带下划线文本 Markdown 分隔线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： 12345**** * ******- - ----------- 五种方法都可以画一条分隔线，分隔线的样式都一样。 Markdown 脚注脚注是对文本的补充说明。Markdown 脚注的格式如下: 1[^要注明的文本] 以下实例演示了脚注的用法： 创建脚注格式类似这样 markdown[^1] [^1]:Markdown是一种纯文本标记语言 Markdown 列表Markdown 支持有序列表和无序列表。 无序列表使用星号*、加号+或是减号-作为列表标记： 1234567891011* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 演示： 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 有序列表使用数字并加上.号来表示，如： 1231. 第一项2. 第二项3. 第三项 演示： 第一项 第二项 第三项 列表嵌套。列表嵌套只需在子列表中的选项添加四个空格即可： 1231. 第一项 1. 第一项第一点 * 第一项第一点补充部分 第一项 第一项第一点 第一项第一点补充部分 Markdown 区块Markdown 区块引用是在段落开头使用&gt;符号 ，然后后面紧跟一个空格符号： 12&gt; 区块引用 &gt; java开发 区块引用java开发 另外区块是可以嵌套的，一个&gt;符号是最外层，两个&gt;符号是第一层嵌套，以此类推： 123&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 最外层 第一层嵌套 第二层嵌套 区块中使用列表区块中使用列表实例如下： 123456&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项 区块中使用列表 第一项 第二项 第一项 第二项 第三项 列表中使用区块如果要在列表项目内放进区块，那么就需要在&gt;前添加四个空格的缩进。区块中使用列表实例如下： 1234* 第一项 &gt; java &gt; 最好的语言* 第二项 第一项 java最好的语言 第二项 Markdown 代码如果是段落上的一个函数或片段的代码可以用反引号把它包起来(`)，例如： 1`println()` 函数 代码区块代码区块使用 4 个空格或者一个制表符(Tab键)。 你也可以用 ``` 包裹一段代码，并指定一种语言(也可以不指定)： 1234@Testvoid contextLoads() &#123; System.out.println(&quot;test&quot;);&#125; Markdown 链接链接使用方法如下： 123[链接名称](链接地址) 或者 &lt;链接地址&gt; 例如： 123456[百度](https://www.baidu.com)``` &gt; [百度](https://www.baidu.com)## 高级链接 ##我们可以通过变量来设置一个链接，变量赋值在文档末尾进行： This is [example] id reference-style link. 123# Markdown 图片 #Markdown 图片语法格式如下： 12345开头一个感叹号!接着一个方括号，里面放上图片的替代文字接着一个普通括号，里面放上图片的网址最后还可以用引号包住并加上选择性的 &#x27;title&#x27; 属性的文字使用实例： 1234&gt; ![wallhaven图片](https://w.wallhaven.cc/full/8o/wallhaven-8oky1j.jpg )&gt; ![wallhaven图片](https://w.wallhaven.cc/full/8o/wallhaven-8ok7vk.jpg &quot;wallhaven图片&quot;)当然，你也可以像网址那样对图片网址使用变量: 这个链接用url作为网址变量 .然后在文档的结尾为变量赋值(网址) 12Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的&lt;img&gt;标签。 123456&gt; &lt;img src=&quot;https://w.wallhaven.cc/full/8o/wallhaven-8ok7vk.jpg&quot; width=50%&gt;# Markdown 表格 #Markdown 制作表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。 语法格式如下： | 表头 | 表头 | | ----- | ----- | | 单元格 | 单元格 | | 单元格 | 单元格 | 123456789101112&gt; | 表头 | 表头 | &gt; | ----- | ----- | &gt; | 单元格 | 单元格 | &gt; | 单元格 | 单元格 |## 对齐方式 ##我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例如下： | 左对齐 | 右对齐 | 居中对齐 | | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格单元格 | 单元格单元格 | 单元格单元格 | 1234567891011&gt; | 左对齐 | 右对齐 | 居中对齐 |&gt; | :-----| ----: | :----: |&gt; | 单元格 | 单元格 | 单元格 |&gt; | 单元格单元格 | 单元格单元格 | 单元格单元格 |# Markdown 高级技巧 #支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。要制约的只有一些 HTML 区块元素――比如` &lt;div&gt; &lt;table&gt; &lt;pre&gt; &lt;p&gt; `等标签， 必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的`&lt;p&gt;`标签。 如： Foo 12HTML 的区段（行内）标签如` &lt;span&gt; &lt;cite&gt; &lt;del&gt; `可以在 Markdown 的段落、列表或是标题里随意使用。如： 使用 Ctrl+Alt+Del 重启电脑 1234&gt; 使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑# 转义 #Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符： **文本加粗** \\*\\* 正常显示星号 \\*\\* 12345&gt; **文本加粗** &gt; \\*\\* 正常显示星号 \\*\\*Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： \\ 反斜线 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 小括号 # 井字号 + 加号 - 减号 . 英文句点 ! 感叹号 ``` # 特殊符号 # Markdown 支持以下这些特殊符号 © & ¨ ™ ¡ £ &amp; &lt; &gt; ¥ € ® ± ¶ § ¦ ¯ « · X² Y³ ¾ ¼ × ÷ » 18ºC “ ‘© &amp; ¨ ™ ¡ £ &amp; &lt; &gt; ¥ € ® ± ¶ § ¦ ¯ « · X² Y³ ¾ ¼ × ÷ » 18ºC “ ‘","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]}],"categories":[],"tags":[{"name":"私有前缀 浏览器内核 -moz -webkit -ms CSS3","slug":"私有前缀-浏览器内核-moz-webkit-ms-CSS3","permalink":"http://example.com/tags/%E7%A7%81%E6%9C%89%E5%89%8D%E7%BC%80-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8-moz-webkit-ms-CSS3/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]}